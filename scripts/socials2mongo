#!/usr/bin/env perl

use Switch;

sub print_line {
	my ($i, $fh, $ofh) = @_;

	my $line = <$fh>;

	$line =~ s/^\s+|\s+$//g;

	if (length($line) == 0 or substr($line, 0, 1) eq "#") {
		return 1;
	}

	$line =~ s/"/\\"/g;

	if ($line =~ /^\s*\$\s*$/) {
		return;
	}

  switch($i) {
    case 0 { print $ofh "\"self_no_arg\""; }
    case 1 { print $ofh "\"others_no_arg\""; }
    case 2 { print $ofh "\"self_found\""; }
    case 3 { print $ofh "\"others_found\""; }
    case 4 { print $ofh "\"vict_found\""; }
    case 5 { print $ofh "\"self_not_found\""; }
    case 6 { print $ofh "\"self_auto\""; }
    case 7 { print $ofh "\"others_auto\""; }
  }

	if ($line =~ /\$[eEsSmM]/) {
		my $temp = $line;
		$temp =~ s/\$[eE]/he/g;
		$temp =~ s/\$[sS]/his/g;
		$temp =~ s/\$[mM]/him/g;

		print $ofh ": { \"male\": \"$temp\", ";

		$temp = $line;
		$temp =~ s/\$[eE]/she/g;
		$temp =~ s/\$[sS]/her/g;
		$temp =~ s/\$[mM]/her/g;

		 print $ofh "\"female\": \"$temp\", ";

 		$temp = $line;
 		$temp =~ s/\$[eE]/it/g;
 		$temp =~ s/\$[sS]/it/g;
 		$temp =~ s/\$[mM]/it/g;

		print $ofh "\"neutral\": \"$temp\"}";
	} else {
  		print $ofh ": { \"all\": \"$line\" }";
	}

	print $ofh ",\n";

	return 0;
}

sub usage
{
	print("$0 <input file> [output file]\n");
}

sub main
{
	my $line;
	my $i;

	if (scalar @ARGV == 0) {
		usage();
		return 1;
	}

	open(my $fh, "<", $ARGV[0]) or die "cannot open < $ARGV[0]: $!";

	open(my $ofh, ">", $ARGV[1] || "socials2mongo.out") or die "cannot open > $ARGV[1]: $!";

  	my $db_name = $ARGV[2] || "emotext_development";

  	print $ofh "use $db_name\n";

	while($line = <$fh>) {

		$line =~ s/^\s+|\s+$//g;

		if (length($line) == 0 or substr($line, 0, 1) eq "#") {
			next;
		}

		# must have a name
		$line =~ s/^([A-Za-z0-9]+)\s[0-9]+\s[0-9]+/$1/;

		print $ofh "db.actions.insert({\n\t\"name\": \"$line\",\n\t";

		$i = 0;

		while(!print_line($i, $fh, $ofh)) {
			$i++;
			print $ofh "\t";
		}

    	print $ofh "})\n";
	}

	print "Ok.\n";

	return 0;
}

exit(&main);
